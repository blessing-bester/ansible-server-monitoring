---
- name: Checking if prometheus is installed
  stat:
    path: "/usr/local/bin/prometheus"
  register: prometheus_stat

- name: Creating prometheus and prometheus user groups
  group:
    name: prometheus
    state: present
  when: not prometheus_stat.stat.exists

- name: Creating a prometheus user
  user:
    name: prometheus
    shell: /sbin/nologin
    state: present
    create_home: false
    group: prometheus
  when: not prometheus_stat.stat.exists

- name: Creating directories for Prometheus
  file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'
  loop:
    - /etc/prometheus
    - /var/lib/prometheus
  when: not prometheus_stat.stat.exists

- name: Downloading and extracting Prometheus
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: true
  when: not prometheus_stat.stat.exists

- name: Copying prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: prometheus
    group: prometheus
    mode: '0755'
    remote_src: true
  loop:
    - prometheus
    - promtool
  when: not prometheus_stat.stat.exists

- name: Copying Prometheus console templates
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/etc/prometheus/{{ item }}"
    owner: prometheus
    group: prometheus
    mode: '0755'
    remote_src: true
  loop:
    - consoles
    - console_libraries
  when: not prometheus_stat.stat.exists

- name: Creating Prometheus configuration file
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'
  notify:
    - restart prometheus

- name: Creating prometheus systemd service file
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart prometheus
  
- name: Enabling and starting prometheus service
  systemd:
    name: prometheus
    state: started
    daemon_reload: true
    enabled: true